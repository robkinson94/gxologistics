name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

defaults:
  run:
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
      ACCESS_TOKEN_LIFETIME_MINUTES: ${{ secrets.ACCESS_TOKEN_LIFETIME_MINUTES }}
      REFRESH_TOKEN_LIFETIME_DAYS: ${{ secrets.REFRESH_TOKEN_LIFETIME_DAYS }}
      ROTATE_REFRESH_TOKENS: ${{ secrets.ROTATE_REFRESH_TOKENS }}
      BLACKLIST_AFTER_ROTATION: ${{ secrets.BLACKLIST_AFTER_ROTATION }}
      UPDATE_LAST_LOGIN: ${{ secrets.UPDATE_LAST_LOGIN }}
      REACT_DOMAIN: ${{ secrets.REACT_DOMAIN }}
      REACT_VERIFY_PATH: ${{ secrets.REACT_VERIFY_PATH }}
      REACT_REDIRECT_PATH: ${{ secrets.REACT_REDIRECT_PATH }}
      DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}
      EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        working-directory: gxologistics
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run migrations
        working-directory: gxologistics
        run: |
          python manage.py makemigrations --no-input
          python manage.py migrate --no-input

      - name: Run tests
        working-directory: gxologistics
        run: python manage.py test

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: https://index.docker.io/v1/

      - name: Build and push Docker image
        working-directory: gxologistics
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gxologistics:latest -f gxologistics/Dockerfile gxologistics
          docker push ${{ secrets.DOCKER_USERNAME }}/gxologistics:latest
